{"version":3,"sources":["uni-app:///main.js","webpack:///E:/.my.workspace/uni-app/HelloWorld/pages/test/test.vue?54b6","webpack:///E:/.my.workspace/uni-app/HelloWorld/pages/test/test.vue?c53f","webpack:///E:/.my.workspace/uni-app/HelloWorld/pages/test/test.vue?c042","webpack:///E:/.my.workspace/uni-app/HelloWorld/pages/test/test.vue?3444","uni-app:///pages/test/test.vue"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","data","dbName","dbPath","dbTable","dbIsOpen","chatText","id","fromId","toId","content","flag","chatText1","onLoad","methods","createChatTable","openDatabase","plus","name","path","success","console","fail","isOpenDatabase","closeDatabase","insertChatRow","insertListChatRow","sql","deleteChatRow","selectSql","dropTable","transaction","operation","executeSql"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,aAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAiH;AACjH;AACwD;AACL;;;AAGnD;AAC2K;AAC3K,gBAAgB,oLAAU;AAC1B,EAAE,0EAAM;AACR,EAAE,+EAAM;AACR,EAAE,wFAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,mFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAA4nB,CAAgB,ipBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBhpB;AAAA,eACA;EACAC;IACA;MACA;;MAEAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC,YACA;QACAL;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAJ;QACAC;QACAC;QACAC;QACAC;MACA;IAEA;EACA;EACAE;IACA;IACA;EAAA,CACA;EACAC;IACA;IACA;IACA;IACA;IACA;IACAC;MACA,yDACA;MACA;IACA;IACAC;MACAC;QACAC;QACAC;QACAC;UACAC;QACA;QACAC;UACAD;QACA;MACA;IACA;IACAE;MACA;QACAL;QACAC;MACA;MACA;QACAE;MACA;QACAA;MACA;IACA;IACAG;MACAP;QACAC;QACAE;UACAC;QACA;QACAC;UACAD;QACA;MACA;IACA;IACAI;MACA;MACAxB;MACA,yFACA;MACA;IACA;IACAyB;MACA;MACA;MACA;QACAC,2FACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA,wEACA;MACA;IACA;IACAC;MACA;MACAb;QACAC;QACAS;QACAP;UACAC;QACA;QACAC;UACAD;QACA;MACA;IACA;IACAU;MACAd;QACAC;QACAc;QACAZ;UACAC;QACA;QACAC;UACAD;QACA;MACA;IACA;IACAY;MACAhB;QACAC;QACAS;QACAP;UACAC;QACA;QACAC;UACAD;QACA;MACA;IACA;EACA;AACA;AAAA,2B","file":"pages/test/test.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/test/test.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./test.vue?vue&type=template&id=3e202046&\"\nvar renderjs\nimport script from \"./test.vue?vue&type=script&lang=js&\"\nexport * from \"./test.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/test/test.vue\"\nexport default component.exports","export * from \"-!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--17-0!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./test.vue?vue&type=template&id=3e202046&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\JAVA\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./test.vue?vue&type=script&lang=js&\"","<template>\n\t<view class=\"\">\n\t\t<!-- <div>{{odb}}</div> -->\n\t\t<div>\n\t\t\t<button type=\"default\" @click=\"isOpenDatabase\">判断数据库是否打开</button>\n\t\t\t<button type=\"default\" @click=\"openDatabase\">打开数据库</button>\n\t\t\t<button type=\"default\" @click=\"closeDatabase\">关闭数据库</button>\n\t\t\t<button type=\"default\" @click=\"createChatTable\">创建表</button>\n\t\t\t<button type=\"default\" @click=\"dropTable\">删除表</button>\n\t\t\t<button type=\"default\" @click=\"transaction\">执行事务</button>\n\t\t\t<button type=\"default\" @click=\"insertChatRow\">新增数据</button>\n\t\t\t<button type=\"default\" @click=\"insertListChatRow\">批量新增数据</button>\n\t\t\t<button type=\"default\" @click=\"deleteChatRow\">删除所有数据</button>\n\t\t\t<button type=\"default\" @click=\"selectSql\">查询数据</button>\n\t\t</div>\n\t</view>\n</template>\n \n<script>\n\t// import Sqlite from '../../utils/sqllite.js'\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\t// odb:'',\n\t\t\t\t\n\t\t\t\tdbName: 'dianji_chat',\n\t\t\t\tdbPath: '_doc/dianji_chat.db',\n\t\t\t\tdbTable: 'dianji_chat',\n\t\t\t\tdbIsOpen: false,\n\t\t\t\tchatText: {\n\t\t\t\t\tid: 1,\n\t\t\t\t\tfromId: '123',\n\t\t\t\t\ttoId: '321',\n\t\t\t\t\tcontent: '你好!',\n\t\t\t\t\tflag: 1\n\t\t\t\t},\n\t\t\t\tchatText1: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 11,\n\t\t\t\t\t\tfromId: '123',\n\t\t\t\t\t\ttoId: '321',\n\t\t\t\t\t\tcontent: '你好!',\n\t\t\t\t\t\tflag: 1\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 12,\n\t\t\t\t\t\tfromId: '123',\n\t\t\t\t\t\ttoId: '321',\n\t\t\t\t\t\tcontent: '你好!',\n\t\t\t\t\t\tflag: 1\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t}\n\t\t},\n\t\tonLoad() {\n\t\t\t// console.log('Sqlite:',Sqlite)\n\t\t\t// this.open();\n\t\t},\n\t\tmethods: {\n\t\t\t// async open(){\n\t\t\t// \tlet odb=await Sqlite.openSqlite();\n\t\t\t// \tthis.odb=odb;\n\t\t\t// \tconsole.log('打开数据库成功：',odb)\n\t\t\t// },\n\t\t\tcreateChatTable() {\n\t\t\t\tlet sql = 'CREATE TABLE if not exists ' + this.dbTable +\n\t\t\t\t\t' ( \"id\" varchar(32) NOT NULL,\"content\" varchar(1024),\"fromId\" varchar(32), \"toId\" varchar(32), \"flag\" varchar(2), PRIMARY KEY (\"id\"));'\n\t\t\t\tthis.executeSql(sql)\n\t\t\t},\n\t\t\topenDatabase() {\n\t\t\t\tplus.sqlite.openDatabase({\n\t\t\t\t\tname: this.dbName,\n\t\t\t\t\tpath: this.dbPath,\n\t\t\t\t\tsuccess: function(e) {\n\t\t\t\t\t\tconsole.log('打开数据库成功')\n\t\t\t\t\t},\n\t\t\t\t\tfail: function(e) {\n\t\t\t\t\t\tconsole.log(e,'打开数据库失败')\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tisOpenDatabase() {\n\t\t\t\tlet res = plus.sqlite.isOpenDatabase({\n\t\t\t\t\tname: this.dbName,\n\t\t\t\t\tpath: this.dbPath\n\t\t\t\t});\n\t\t\t\tif (res) {\n\t\t\t\t\tconsole.log(res,'数据库已打开')\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res,'数据库未打开')\n\t\t\t\t}\n\t\t\t},\n\t\t\tcloseDatabase() {\n\t\t\t\tplus.sqlite.closeDatabase({\n\t\t\t\t\tname: this.dbName,\n\t\t\t\t\tsuccess: function(e) {\n\t\t\t\t\t\tconsole.log(JSON.stringify(e),'closeDatabase dianji_chat success!');\n\t\t\t\t\t},\n\t\t\t\t\tfail: function(e) {\n\t\t\t\t\t\tconsole.log('closeDatabase failed: ' + JSON.stringify(e));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tinsertChatRow() {\n\t\t\t\tlet data = this.chatText\n\t\t\t\tdata.id++\n\t\t\t\tlet sql = \"insert into \" + this.dbTable +  \" values('\" + data.id + \"','\" + data.content +\n\t\t\t\t\t\"','\" + data.fromId + \"','\" + data.toId + \"',\" + data.flag + \")\";\n\t\t\t\tthis.executeSql(sql)\n\t\t\t},\n\t\t\tinsertListChatRow() {\n\t\t\t\tlet data = this.chatText1\n\t\t\t\tlet sql = '';\n\t\t\t\tfor(let i = 0; i < data.length; i++) {\n\t\t\t\t\tsql = \"insert into \" + this.dbTable +  \" values('\" + data[i].id + \"','\" + data[i].content +\n\t\t\t\t\t\t\"','\" + data[i].fromId + \"','\" + data[i].toId + \"',\" + data[i].flag + \")\";\n\t\t\t\t\tthis.executeSql(sql)\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeleteChatRow() {\n\t\t\t\tlet sql = \"delete from \" + this.dbTable;\n\t\t\t\tthis.executeSql(sql)\n\t\t\t},\n\t\t\tselectSql() {\n\t\t\t\tlet curPage = 1\n\t\t\t\tlet pageSize = 20\n\t\t\t\tlet fromId = '123'\n\t\t\t\tlet sql = 'select * from ' + this.dbTable + ' where fromId=' + fromId +\n\t\t\t\t\t' limit ' + pageSize + ' offset ' + (curPage - 1) * pageSize;\n\t\t\t\tthis.executeSql(sql)\n\t\t\t},\n\t\t\tdropTable() {\n\t\t\t\tlet sql = 'DROP TABLE ' + this.dbTable + ';'\n\t\t\t\tplus.sqlite.executeSql({\n\t\t\t\t\tname: this.dbName,\n\t\t\t\t\tsql: sql,\n\t\t\t\t\tsuccess: function(e) {\n\t\t\t\t\t\tconsole.log(\"删除数据表成功\");\n\t\t\t\t\t},\n\t\t\t\t\tfail: function(e) {\n\t\t\t\t\t\tconsole.log('executeSql failed: ' + JSON.stringify(e));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\ttransaction(){\n\t\t\t\tplus.sqlite.transaction({\n\t\t\t\t\tname: this.dbName,\n\t\t\t\t\toperation: 'begin',\n\t\t\t\t\tsuccess: function(e){\n\t\t\t\t\t\tconsole.log('transaction success!');\n\t\t\t\t\t},\n\t\t\t\t\tfail: function(e){\n\t\t\t\t\t\tconsole.log('transaction failed: '+JSON.stringify(e));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\texecuteSql(sql) {\n\t\t\t\tplus.sqlite.selectSql({\n\t\t\t\t\tname: this.dbName,\n\t\t\t\t\tsql: sql,\n\t\t\t\t\tsuccess: function(data) {\n\t\t\t\t\t\tconsole.log(data,'---------------')\n\t\t\t\t\t},\n\t\t\t\t\tfail: function(e) {\n\t\t\t\t\t\tconsole.log('selectSql failed: ' + JSON.stringify(e));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t}\n\t}\n</script>\n \n<style>\n</style>"],"sourceRoot":""}